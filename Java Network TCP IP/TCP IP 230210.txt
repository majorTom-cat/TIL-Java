20장 네트워크 통신 프로그래밍

외부 라이브러리 사용하면 채팅 간단하게 만들수있긴함

TCP/IP 프로토콜
• 인터넷에서 사용되는 프로토콜(protocol, 통신 규칙)
• TCP 프로토콜(보안 관련)과 IP 프로토콜(주소 관련)을 함께 부르는 이름

IP 프로토콜 : 네트웍에 연결된 각각의 컴퓨터에 IP 주소(IP address)를 붙여서 관리하는 규칙

cmd창
ipconfig
IPv4 Address : ip 주소를 32 bit 로 표시
192 로 시작 : 사설 IP. 가짜. 진짜로 변경해서 통신함
192.168.0.3

포트(port) : 네트워크를 통해 데이터를 주고 받을 때 사용되는 가상의 출구. 0~65535 범위(16 bit를 사용한다. 2^16 - 1)
	0~1023 은 well known port 로 system이 사용하는 번호. MySql 할때 사용한 포트번호는 3306.
	80, 21, 25, 110 자주 쓰이는 번호

-클라이언트 프로그램(client program) : 연결을 요청하는 통신 프로그램. 연결을 요청
- 서버 프로그램(server program) : 연결 요청을 기다리는 통신 프로그램. 연결 요청을 받아 연결을 맺음

IP 주소의 클래스는 A, B, C 클래스 정도만 알고있으면 됨.
관련 파일 : ntw.PNG

소켓
소켓(socket) : 프로그램 내에서 보았을 때의 데이터 통신 출입구
	-서버 소켓, 클라이언트 소켓 두 종류

서버 소켓
	-서버 프로그램에서만 사용되는 소켓
	-연결 요청을 기다리다가, 연결 요청이 오면 연결을 맺고 또 다른 소켓을 생성 (클라이언트와 1:1)

클라이언트 소켓
	-클라이언트 프로그램과 서버 프로그램에서 모두 사용되는 소켓
	-실제 데이터 전송에 사용되는 것은 이 소켓임
	-서버 프로그램에서는 서버 소켓에 의해 생성됨
	-클라이언트 프로그램에서는 직접 생성해야 함

서버는 클라이언트의 요청이 오면 새로운 소켓을 생성

Subnet Mask : ip네트워크 영역 구분할때 사용
A, B, C 클래스. 일반 사용자는 보통 C 클래스 사용
255.255.255.0
동일한 네트워크이면 외부로 나가 찾을 필요가 없음
외부에 있으면 라우팅 작업을 해야함

첫번째 작업이 목적지 컴퓨터와 동일한 네트워크인지 판별

IP : IP address로 목적지 컴퓨터 찾음

인터넷 상에서 주소라는 개념
Port Address
IP address
MAC address : lan카드에 부여된 주소
	lan카드는 통신하려면 무조건 필요

컴퓨터에는 4개의 송수신 스레드 돌아감

HTML5 => WebSocket 활용해 채팅 가능

관련 파일 : ClientExample1.java  ServerExample1.java
------------------------------------------------------------------------------

송수신을 동시에 하는 프로그램

로컬에서 루프백 주소인 127.0.0.1 을 사용. 한글전송이 안되 여러 방법을 시도해봤지만
한글전송은 끝내 실패.

관련 파일 : SenderThread.java  ReceiverThread.java  ClientExample3.java  ServerExample3.java

------------------------------------------------------------------------------
230213
여러 명이 참여하는 채팅 프로그램

이번엔 Server를 열고 여러명의 사용자가 있다고 가정하였다.

Client가 socket을 만들어 Server에 접속을 요청하면 server socket은 각 client 마다
socket 객체를 만들어 client와 1:1 매칭을 시켜준다.
client는 명령 프롬프트에서 java ClientExample4 닉네임
닉네임에 이름을 쓰고 서버에 접속하면 첫번째 메세지로 닉네임 관련 메세지가 서버로 전달.
서버가 각 client에게 메세지를 뿌려준다.

각 client는 socket객체를 SenderThread와 ReceiverThread 클래스의 객체의 생성자 파라미터로 전달한다.
cilent가 보낸 메세지는 PerclientThread의 동기화 리스트를 통해 각 client에게 뿌려준다.


관련 파일 : PerClinetThread.java	ServerExample4.java  SenderThread.java  ReceiverThread.java
  ClientExample4.java  NetworkChat1.png  NetworkChat2.png
